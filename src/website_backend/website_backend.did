type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : blob;
  headers : vec HttpHeader;
};
type ResponseAPI = record { status : bool; result : text; message : text };
type TransformArgs = record { context : blob; response : HttpResponse };
service : () -> {
  add_credit_for_dev : (text) -> (text);
  delete_image_by_index : (nat64) -> ();
  get_account_id_for_canister : () -> (text);
  get_balance : () -> (nat8);
  get_images_by_principal : () -> (vec text);
  get_tier : () -> (text);
  get_transaction : () -> (vec text);
  get_tx_summary : (nat64, nat64, text, text, text) -> (text);
  initialize_credit : () -> (text);
  reduction_credit : (principal) -> ();
  save_image_to_store : (text) -> ();
  send_http_post : (text, text) -> (ResponseAPI);
  transform : (TransformArgs) -> (HttpResponse);
}